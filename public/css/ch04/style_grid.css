:root {
    box-sizing: border-box;
}

*,
::before,
::after {
    box-sizing: inherit; /*Global border-box fix */
}

body {
    background-color: #eee;
    font-family: Helvetica, Arial, sans-serif;
}

body * + * {
    margin-top: 1.5em; /* Lobotomized owl global margins*/
}

/* so far it's a good practice to start with these styles*/

/* Header colors and padding */
header {
    padding: 1em 1.5em;
    color: #fff;
    background-color: #0072b0;
    border-radius: .5em;
    margin-bottom: 1.5em;
}

/*Main (white container) colors and padding. Padding such an important thing */
.main {
    padding: 0 1.5em 1.5em;
    background-color: #fff;
    border-radius: .5em;
}

/*Double container the outer one is body */
.container {
    max-width: 1080px;
    /* auto left and right margins will grow to fill the available space, centering the element within the outer container
    this is why the container is centered
    */
    margin: 0 auto;
}

.row::after {
    content: " ";
    display: block;
    clear: both;
}

/*
    For aligning with Runnig tips text
 */
.row{
    margin-left: -0.75em;
    margin-right: -0.75em;
}

/*Attribute selector all the elements with class attribute that starts with column-*/
[class*="column-"]{
    float: left;
    padding: 0 0.75em; /* .75em to the left and the right */
    margin-top: 0;/*Removes top margin from columns */

}

.column-1 { width: 8.3333%; }
.column-2 { width: 16.6667%; }
.column-3 { width: 25%; }
.column-4 { width: 33.3333%; }
.column-5 { width: 41.6667%; }
.column-6 { width: 50%; }
.column-7 { width: 58.3333%; }
.column-8 { width: 66.6667%; }
.column-9 { width: 75%; }
.column-10 { width: 83.3333%; }
.column-11 { width: 91.6667% }
.column-12 { width: 100%; }

/*
    Grid doesn't need anymore floats, widths, margins, this already being handled by the column classes
neither nth child to clear
 */
.media {
    padding: 1.5em;
    background-color: #eee;
    border-radius: 0.5em;
}


/*This will add the clear style at the end of the main tag*/
.clearfix::before,
.clearfix::after {
    display: table; /* this works with block-level elements table-cell is not one of those elements so it won't work */
    content: " "; /*some old workaround for some browsers like opera*/

}

.clearfix::after {
    clear: both;
}

.media-image {
    float: left;
    margin-right: 1.5em; /*Add a margin to the image to insert space between it and the body*/
}

.media-body {
    overflow: auto;
    /*
    text won't overlap the floated image there're other approaches like using:

        float: left or float: right —anything but none
        overflow : hidden , auto , or scroll —anything but visible
        display : inline-block , table-cell , table-caption , flex , inline-flex ,
        grid , or inline-grid —these are called block containers.
        position : absolute or position: fixed
    */
    margin-top: 0;

}

.media-body h4 {
    margin-top: 0;
}

